{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "name": "TaskTwo_RulesViolated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "expiryDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "disbursedDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct Task2.DateObj[]",
          "name": "dates",
          "type": "tuple[]"
        }
      ],
      "name": "validate",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x59f76cce6fee7e90782beb6979378e603a5c79e07f50fbf7fcefbc52b9fb41d9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "273197",
    "logsBloom": "0x
    "blockHash": "0x6e5fd2db1e9470707f9b79394f0357e6575f6b42743e6d260a64071e59f9fb94",
    "transactionHash": "0x59f76cce6fee7e90782beb6979378e603a5c79e07f50fbf7fcefbc52b9fb41d9",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "273197",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e1154da6fa117a3448c65d7305c1bd41",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TaskTwo_RulesViolated\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disbursedDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Task2.DateObj[]\",\"name\":\"dates\",\"type\":\"tuple[]\"}],\"name\":\"validate\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validate((uint256,uint256)[])\":{\"details\":\"Reverts with TaskTwo_RulesViolated if any date pair violates the rule\",\"params\":{\"dates\":\"An array of DateObj structs containing expiry and disbursed dates\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"TaskTwo_RulesViolated()\":[{\"notice\":\"Error thrown when the expiry date is not more than 6 months after the disbursed date\"}]},\"kind\":\"user\",\"methods\":{\"validate((uint256,uint256)[])\":{\"notice\":\"Validates that the expiry date is more than 6 months after the disbursed date for each item\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/task2.sol\":\"Task2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/task2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.28;\\r\\n\\r\\n/// @title Task 2 Validator Contract\\r\\n/// @author Al Fahim\\r\\n/// @notice Validates that each expiry date is at least 6 months after the disbursed date\\r\\n/// @dev Uses a fixed time difference of 6 months (15552000 seconds)\\r\\n\\r\\n\\r\\n/// @notice Error thrown when the expiry date is not more than 6 months after the disbursed date\\r\\nerror TaskTwo_RulesViolated();\\r\\n\\r\\ncontract Task2 {\\r\\n\\r\\n    /// @notice The minimum required time difference between disbursed and expiry dates (6 months)\\r\\n    uint256 constant timeDifference = 15552000; // 6 months in seconds\\r\\n\\r\\n    /// @notice Structure to represent disbursed and expiry dates\\r\\n    /// @param expiryDate The date when the item or policy expires (as a Unix timestamp)\\r\\n    /// @param disbursedDate The date when the item or policy was issued/disbursed (as a Unix timestamp)\\r\\n    struct DateObj {\\r\\n        uint256 expiryDate;\\r\\n        uint256 disbursedDate;\\r\\n    }\\r\\n\\r\\n    /// @notice Validates that the expiry date is more than 6 months after the disbursed date for each item\\r\\n    /// @dev Reverts with TaskTwo_RulesViolated if any date pair violates the rule\\r\\n    /// @param dates An array of DateObj structs containing expiry and disbursed dates\\r\\n    function validate(DateObj[] memory dates) external pure {\\r\\n        uint256 n = dates.length;\\r\\n        for (uint256 i = 0; i < n; i++) {\\r\\n            uint256 diff = dates[i].expiryDate - dates[i].disbursedDate;\\r\\n            if (diff <= timeDifference) {\\r\\n                revert TaskTwo_RulesViolated();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5c95a43d593ffd3f4c2c5e83cddf128c584ed13c8cf4be92bae189185348ac72\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506104018061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ea7346914610030575b600080fd5b61004a600480360381019061004591906102f0565b61004c565b005b60008151905060005b818110156100f357600083828151811061007257610071610339565b5b60200260200101516020015184838151811061009157610090610339565b5b6020026020010151600001516100a79190610397565b905062ed4e0081116100e5576040517ffa471b7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080600101915050610055565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61015a82610111565b810181811067ffffffffffffffff8211171561017957610178610122565b5b80604052505050565b600061018c6100f8565b90506101988282610151565b919050565b600067ffffffffffffffff8211156101b8576101b7610122565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b6101e6816101d3565b81146101f157600080fd5b50565b600081359050610203816101dd565b92915050565b60006040828403121561021f5761021e6101ce565b5b6102296040610182565b90506000610239848285016101f4565b600083015250602061024d848285016101f4565b60208301525092915050565b600061026c6102678461019d565b610182565b9050808382526020820190506040840283018581111561028f5761028e6101c9565b5b835b818110156102b857806102a48882610209565b845260208401935050604081019050610291565b5050509392505050565b600082601f8301126102d7576102d661010c565b5b81356102e7848260208601610259565b91505092915050565b60006020828403121561030657610305610102565b5b600082013567ffffffffffffffff81111561032457610323610107565b5b610330848285016102c2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a2826101d3565b91506103ad836101d3565b92508282039050818111156103c5576103c4610368565b5b9291505056fea2646970667358221220a3c23315639475f8fc9ec97eae0973f76210ac153f415c601645f204ec89cf4c64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ea7346914610030575b600080fd5b61004a600480360381019061004591906102f0565b61004c565b005b60008151905060005b818110156100f357600083828151811061007257610071610339565b5b60200260200101516020015184838151811061009157610090610339565b5b6020026020010151600001516100a79190610397565b905062ed4e0081116100e5576040517ffa471b7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080600101915050610055565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61015a82610111565b810181811067ffffffffffffffff8211171561017957610178610122565b5b80604052505050565b600061018c6100f8565b90506101988282610151565b919050565b600067ffffffffffffffff8211156101b8576101b7610122565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b6101e6816101d3565b81146101f157600080fd5b50565b600081359050610203816101dd565b92915050565b60006040828403121561021f5761021e6101ce565b5b6102296040610182565b90506000610239848285016101f4565b600083015250602061024d848285016101f4565b60208301525092915050565b600061026c6102678461019d565b610182565b9050808382526020820190506040840283018581111561028f5761028e6101c9565b5b835b818110156102b857806102a48882610209565b845260208401935050604081019050610291565b5050509392505050565b600082601f8301126102d7576102d661010c565b5b81356102e7848260208601610259565b91505092915050565b60006020828403121561030657610305610102565b5b600082013567ffffffffffffffff81111561032457610323610107565b5b610330848285016102c2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a2826101d3565b91506103ad836101d3565b92508282039050818111156103c5576103c4610368565b5b9291505056fea2646970667358221220a3c23315639475f8fc9ec97eae0973f76210ac153f415c601645f204ec89cf4c64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "validate((uint256,uint256)[])": {
        "details": "Reverts with TaskTwo_RulesViolated if any date pair violates the rule",
        "params": {
          "dates": "An array of DateObj structs containing expiry and disbursed dates"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "TaskTwo_RulesViolated()": [
        {
          "notice": "Error thrown when the expiry date is not more than 6 months after the disbursed date"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "validate((uint256,uint256)[])": {
        "notice": "Validates that the expiry date is more than 6 months after the disbursed date for each item"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}