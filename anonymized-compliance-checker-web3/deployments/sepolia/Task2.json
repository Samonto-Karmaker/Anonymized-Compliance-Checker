{
  "address": "0x7d319fB7b5C3B01D5746DDaefa2db0013e4880cF",
  "abi": [
    {
      "inputs": [],
      "name": "TaskTwo_RulesViolated",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "expiryDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "disbursedDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct Task2.DateObj[]",
          "name": "dates",
          "type": "tuple[]"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xfda60bb3a30876651d02eb06404415265580429d9d6cc63dc5d761e0eb55636a",
  "receipt": {
    "to": null,
    "from": "0xc43B4E51FB66a38Bcf675e1b0d9bCC454981caCc",
    "contractAddress": "0x7d319fB7b5C3B01D5746DDaefa2db0013e4880cF",
    "transactionIndex": 163,
    "gasUsed": "290699",
    "logsBloom": "0x
    "blockHash": "0xb78b13c789a6125b3ca0655759beb7872530d78332c8a25f0a8c3dae2acddb93",
    "transactionHash": "0xfda60bb3a30876651d02eb06404415265580429d9d6cc63dc5d761e0eb55636a",
    "logs": [],
    "blockNumber": 8474283,
    "cumulativeGasUsed": "23738269",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "3cdfab3573ac7beb6cd0b7832b32f67e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TaskTwo_RulesViolated\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disbursedDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Task2.DateObj[]\",\"name\":\"dates\",\"type\":\"tuple[]\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validate((uint256,uint256)[])\":{\"details\":\"Reverts with TaskTwo_RulesViolated if any date pair violates the rule\",\"params\":{\"dates\":\"An array of DateObj structs containing expiry and disbursed dates\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"TaskTwo_RulesViolated()\":[{\"notice\":\"Error thrown when the expiry date is not more than 6 months after the disbursed date\"}]},\"kind\":\"user\",\"methods\":{\"validate((uint256,uint256)[])\":{\"notice\":\"Validates that the expiry date is more than 6 months after the disbursed date for each item\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/task2.sol\":\"Task2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/task2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\n/// @title Task 2 Validator Contract\\n/// @author Al Fahim\\n/// @notice Validates that each expiry date is at least 6 months after the disbursed date\\n/// @dev Uses a fixed time difference of 6 months (15552000 seconds)\\n\\n\\n/// @notice Error thrown when the expiry date is not more than 6 months after the disbursed date\\nerror TaskTwo_RulesViolated();\\n\\ncontract Task2 {\\n\\n    /// @notice The minimum required time difference between disbursed and expiry dates (6 months)\\n    uint256 constant timeDifference = 15552000; // 6 months in seconds\\n\\n    /// @notice Structure to represent disbursed and expiry dates\\n    /// @param expiryDate The date when the item or policy expires (as a Unix timestamp)\\n    /// @param disbursedDate The date when the item or policy was issued/disbursed (as a Unix timestamp)\\n    struct DateObj {\\n        uint256 expiryDate;\\n        uint256 disbursedDate;\\n    }\\n\\n    /// @notice Validates that the expiry date is more than 6 months after the disbursed date for each item\\n    /// @dev Reverts with TaskTwo_RulesViolated if any date pair violates the rule\\n    /// @param dates An array of DateObj structs containing expiry and disbursed dates\\n    function validate(DateObj[] memory dates) external pure returns(bool){\\n        uint256 n = dates.length;\\n        for (uint256 i = 0; i < n; i++) {\\n            uint256 diff = dates[i].expiryDate - dates[i].disbursedDate;\\n            if (diff <= timeDifference) {\\n                revert TaskTwo_RulesViolated();\\n            }\\n        }\\n        return true;\\n    }\\n\\n    \\n}\\n\",\"keccak256\":\"0x1e1627bf86b256a61054cb07720c09272f48aa42d1d21bf48154cb57efde1bf2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506104528061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ea7346914610030575b600080fd5b61004a6004803603810190610045919061030b565b610060565b604051610057919061036f565b60405180910390f35b6000808251905060005b818110156101085760008482815181106100875761008661038a565b5b6020026020010151602001518583815181106100a6576100a561038a565b5b6020026020010151600001516100bc91906103e8565b905062ed4e0081116100fa576040517ffa471b7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50808060010191505061006a565b506001915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101758261012c565b810181811067ffffffffffffffff821117156101945761019361013d565b5b80604052505050565b60006101a7610113565b90506101b3828261016c565b919050565b600067ffffffffffffffff8211156101d3576101d261013d565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b610201816101ee565b811461020c57600080fd5b50565b60008135905061021e816101f8565b92915050565b60006040828403121561023a576102396101e9565b5b610244604061019d565b905060006102548482850161020f565b60008301525060206102688482850161020f565b60208301525092915050565b6000610287610282846101b8565b61019d565b905080838252602082019050604084028301858111156102aa576102a96101e4565b5b835b818110156102d357806102bf8882610224565b8452602084019350506040810190506102ac565b5050509392505050565b600082601f8301126102f2576102f1610127565b5b8135610302848260208601610274565b91505092915050565b6000602082840312156103215761032061011d565b5b600082013567ffffffffffffffff81111561033f5761033e610122565b5b61034b848285016102dd565b91505092915050565b60008115159050919050565b61036981610354565b82525050565b60006020820190506103846000830184610360565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103f3826101ee565b91506103fe836101ee565b9250828203905081811115610416576104156103b9565b5b9291505056fea2646970667358221220175de6c1a31dcc996da17da6d0221e4fd0f164bf96a9f91505ad78772723e8c064736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ea7346914610030575b600080fd5b61004a6004803603810190610045919061030b565b610060565b604051610057919061036f565b60405180910390f35b6000808251905060005b818110156101085760008482815181106100875761008661038a565b5b6020026020010151602001518583815181106100a6576100a561038a565b5b6020026020010151600001516100bc91906103e8565b905062ed4e0081116100fa576040517ffa471b7200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50808060010191505061006a565b506001915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101758261012c565b810181811067ffffffffffffffff821117156101945761019361013d565b5b80604052505050565b60006101a7610113565b90506101b3828261016c565b919050565b600067ffffffffffffffff8211156101d3576101d261013d565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b610201816101ee565b811461020c57600080fd5b50565b60008135905061021e816101f8565b92915050565b60006040828403121561023a576102396101e9565b5b610244604061019d565b905060006102548482850161020f565b60008301525060206102688482850161020f565b60208301525092915050565b6000610287610282846101b8565b61019d565b905080838252602082019050604084028301858111156102aa576102a96101e4565b5b835b818110156102d357806102bf8882610224565b8452602084019350506040810190506102ac565b5050509392505050565b600082601f8301126102f2576102f1610127565b5b8135610302848260208601610274565b91505092915050565b6000602082840312156103215761032061011d565b5b600082013567ffffffffffffffff81111561033f5761033e610122565b5b61034b848285016102dd565b91505092915050565b60008115159050919050565b61036981610354565b82525050565b60006020820190506103846000830184610360565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103f3826101ee565b91506103fe836101ee565b9250828203905081811115610416576104156103b9565b5b9291505056fea2646970667358221220175de6c1a31dcc996da17da6d0221e4fd0f164bf96a9f91505ad78772723e8c064736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "validate((uint256,uint256)[])": {
        "details": "Reverts with TaskTwo_RulesViolated if any date pair violates the rule",
        "params": {
          "dates": "An array of DateObj structs containing expiry and disbursed dates"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "TaskTwo_RulesViolated()": [
        {
          "notice": "Error thrown when the expiry date is not more than 6 months after the disbursed date"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "validate((uint256,uint256)[])": {
        "notice": "Validates that the expiry date is more than 6 months after the disbursed date for each item"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}